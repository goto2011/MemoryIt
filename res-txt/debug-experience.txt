// 问题定位思路
// V0.7

// work how to
Q:如何定位问题1
A:原则：花3-5分钟时间考虑思路，然后尽快开始做。
Q:配环境是难点，三个办法：
A:① 平时准备好；  ② 找现成的环境用；  ③ 出问题找高手搞定（不要把时间浪费在这些问题上）。
Q:trace 定位1
A:trace 定位，断点+步进跟踪
Q:trace 定位2
A:打断点时要想一想这个断点要达到什么目的，有什么特性；
Q:trace 定位3
A:断下后一步步的跟踪，深入到哪一层都要有基本的规划。
Q:trace 定位4
A:尽可能用trace 改变量方式换取实验结果；不能每个测试项都靠重新编代码方式出版本的方式处理，那样效率太低。

Q:特定问题的首选方法1
A:USB 相关问题，首选是Bus Hound；
Q:特定问题的首选方法2
A:硬件问题：把线连出来，上示波器。要会用示波器。
Q:特定问题的首选方法3
A:用trace 跟无问题，不跟才有，一般和踢狗相关。
Q:特定问题的首选方法4
A:性能问题，先要流程分解成3-6个阶段，然后通过log 打印等方式得出各阶段的时耗，找到突破点。
Q:特定问题的首选方法5
A:功耗问题，逐个器件拔。
Q:迅速缩小焦点
A:对比其它手机，以及之前之后的版本。
Q:时刻关注自己是在哪个层面上考虑问题
A:是cpu层次（包括cpu、硬件寄存器、dma），是外设级别（要考虑时序、电源），还是task级别（sig、队列、task切换、堆栈、中断等）。

Q:性能问题解决方案1
A:① 去掉不必要的步骤；② 合并步骤，批量处理；③ 双buffer，或多个buffer ，保证并发；④ 更大的 buffer。
Q:性能问题解决方案2
A:⑤ 预先处理。⑥ 将处理推到更底层。⑦ 最重要的是，确认哪些步骤最耗时，确认哪些步骤水分最大，谁在等待、在等谁。
Q:内存是不可靠的。
A:内存的确是不可靠的。

Q:张建春的定位技巧1
A:多看 MODEM SOFTWARE INTERFACE .pdf，学会对arm硬件寄存器的直接操作。
Q:张建春的定位技巧2
A:下发“FALSH读”的指令：D.S SD:0X60000304 %LE %LONG 1；D.S SD:0X60000100 %LE %LONG 0x2。0X60000304  即 page read指令。
Q:张建春的定位技巧3
A:设置读地址：D.S SD:0X60000300 %LE %LONG 0x0279c00；
Q:张建春的定位技巧4
A:查看FALSH读写状态：0X60000308；
Q:张建春的定位技巧5
A:查看ECC 纠错的位数：0X6000030C。0表示无错误；超过4个字节就无法正确纠正。

Q:常见的c语言bug 1
A:数值溢出：注意符号型和无符号型，注意32位系统下，char 8位，short 16位，int = long 32位；char 和int的强制转化
Q:常见的c语言bug 2
A:没有初始化：指针没有初始化；循环变量、控制变量、返回值没有初始化；
Q:常见的c语言bug 3
A:数组边界没有保护：一般出现在数组遍历中，在循环结构里。
Q:常见的c语言bug 4
A:字符串问题：字符串边界没有保护；字符串末尾没有’\0’；给字符串申请空间时忘了末尾的’\0’，少 len+1。
Q:常见的c语言bug 5
A:参数传递的问题：形参、实参类型不匹配，强制类型转换；返回值为指针的问题。

Q:如何快速的确认问题的责任归属? 1
A:FFA上有吗? 有, 就是高通的问题. 没有,则是我们的修改引入的.
Q:如何快速的确认问题的责任归属? 2
A:新版本有吗? 没有, 则已经解决.
Q:如何快速的确认问题的责任归属? 3
A:老版本有吗? 没有, 则是最近修改引入的. 有, 则是固有问题.
Q:如何快速的确认问题的责任归属? 4
A:新单板有吗? 没有, 则已经解决. (软件版本一致的情况下)
Q:如何快速的确认问题的责任归属? 5
A:老单板有吗? 没有, 则为硬件修改引入. (软件版本一致的情况下)
Q:如何快速的确认问题的责任归属? 6
A:第三方应用有吗? 有, 说明是底层问题. 没有, 说明是华为应用的问题. (非绝对)
Q:如何快速的确认问题的责任归属? 7
A:问题是否有, 由测试组给结论.

Q:如何升级高通基线？
A:将老基线上华为的修改整理出来，合入新基线。有疑问的，分析是高通修改还是华为修改。麻烦处是两方都在修改同一处代码。
Q:内存观察法
A:通过查看内存的内容，并结合相关的数据结构，找到有用的信息，对定位很有帮助。

Q:MTP传输速率的优化经验1
A:没有并行的使用usb，而是采用传输--处理--传输的方式。改为改为并行方式，最佳情况下速率可提高一倍。
Q:MTP传输速率的优化经验2
A:sd卡写操作是一个瓶颈，可以绕开vfs接口，直接用驱动接口（要先从vfs上unmount sd卡）。
Q:MTP传输速率的优化经验3
A:更新sql，要和其它逻辑并行，因为这些sql数据，都是被动收到的信息，不影响后续逻辑，缓存起来慢慢写没有问题。
Q:MTP传输速率的优化经验4
A:各层buffer都使用乒乓buffer，两个满了再等待。或者用buffer队列。
Q:MTP传输速率的优化经验5
A:buffer放大到64K。
Q:MTP传输速率的优化经验6
A:上层直接用底层buffer，可减少若干次memcpy。要注意，上层要及时读走数据。
Q:MTP传输速率的优化经验7
A:收到的文件放在底层写。

// 芯片选型须关注的问题
Q:芯片选型问题（1）
A:ap和modem两侧的通讯方式，响应速度、buffer size，以及可靠性、稳定性的实测数据。
Q:芯片选型问题（2）
A:emmc上分区管理方式，增减分区是否有限制，方便吗？
Q:芯片选型问题（3）
A:启动流程。是否支持安全启动。
Q:芯片选型问题（4）
A:升级方式，由哪些模块参与。
Q:芯片选型问题（5）
A:射频校准参数在哪里，如何管理，包括备份、恢复、新增、修改、删除的方案。
Q:芯片选型问题（6）
A:debug方法，包括死机dump（dump的速度也要注意），log导出。
Q:芯片选型问题（7）
A:外场现网测试，是否有支撑方法，比如如何抓现场log。
Q:芯片选型问题（8）
A:功耗管理，测试手段，是否提供优化支持。包括基底功耗和应用功耗（浏览、音乐、玩游戏等）。
Q:芯片选型问题（9）
A:主流器件、主流ID的支持情况，比如键盘、屏大小、TP、camera。
Q:芯片选型问题（10）
A:代码开放程度，哪些代码提供给我们，哪些不提供；不提供者如何维护，如何实现新增需求。
Q:芯片选型问题（11）
A:求助渠道，及响应速度。
Q:芯片选型问题（12）
A:是否有on side支持，国内有没有研发团队，地点、规模、支持方式、是否外包。
Q:芯片选型问题（13）
A:频段支持，几个关键点：北美AWS、日本1500/1700、拉美频段。
Q:芯片选型问题（14）
A:GPS是否支持俄罗斯的gloness。
Q:芯片选型问题（15）
A:内存支持情况，包括4G+3G的方案（内存768M）。读写速率是否有数据。
Q:芯片选型问题（16）
A:是否支持flash。
Q:芯片选型问题（17）
A:SD性能如何。
Q:芯片选型问题（18）
A:SMP系统的性能优化，CPU调度策略，以及和功耗。
Q:芯片选型问题（19）
A:平台做了多久，多少产品已经用了，有上市的吗？
Q:芯片选型问题（20）
A:运营商入网认证测试，全球做了多少，能不能帮我们做。
Q:芯片选型问题（21）
A:和google关系，是否是关键合作伙伴，是否可以提前拿到代码，能提前多少。
Q:芯片选型问题（22）
A:在原生系统上的做的修改，包括原因、规模、内聚程度等。
Q:芯片选型问题（23）
A:生产校准方案的具体细节。校准后台是谁做。
Q:芯片选型问题（24）
A:是否支持快速开机、关机闹钟等。
Q:芯片选型思路总结
A:第一次选，风险第一，不做小白鼠。只做业界已经做过的产品。选择过程中，形成自己的套路。第二次选，就要选业界没用过的平台，高风险高收益，风险控制也是核心竞争力。






